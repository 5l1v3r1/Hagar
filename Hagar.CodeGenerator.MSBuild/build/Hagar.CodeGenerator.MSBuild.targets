<Project TreatAsLocalProperty="CodeGenDirectory;IsCore;TaskAssembly;TaskFolder;OutputFileName">
  <PropertyGroup>
    <TaskFolder>netcoreapp2.0</TaskFolder>
    <TaskAssembly>$(MSBuildThisFileDirectory)..\tasks\$(TaskFolder)\Hagar.CodeGenerator.MSBuild.dll</TaskAssembly>
    <CodeGenDirectory Condition="'$([System.IO.Path]::IsPathRooted($(IntermediateOutputPath)))' == 'true'">$(IntermediateOutputPath)</CodeGenDirectory>
    <CodeGenDirectory Condition="'$(CodeGenDirectory)' == ''">$(ProjectDir)$(IntermediateOutputPath)</CodeGenDirectory>
    <OutputFileName>$(CodeGenDirectory)$(TargetName).hagar.g.cs</OutputFileName>
    <CodeGeneratorEnabled Condition="'$(DesignTimeBuild)' != 'true'">true</CodeGeneratorEnabled>
  </PropertyGroup>

  <UsingTask TaskName="Hagar.CodeGenerator.MSBuild.GenerateCode" AssemblyFile="$(TaskAssembly)" Condition="'$(CodeGeneratorEnabled)' == 'true'" />

  <!-- This target is run just before Compile -->
  <Target Name="GenerateCode"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(CodeGeneratorEnabled)' == 'true'"
          Inputs="@(Compile)"
          Outputs="$(OutputFileName)">
    <GenerateCode ProjectFile="$(MSBuildProjectFullPath)" OutputFile="$(OutputFileName)" />
    <ItemGroup>
      <Compile Include="$(OutputFileName)"/>
      <FileWrites Include="$(OutputFileName)"/>
    </ItemGroup>
  </Target>
  
  <Target Name="IncludeCodegenOutputDuringDesignTimeBuild"
        BeforeTargets="AssignTargetPaths"
        Condition="'$(CodeGeneratorEnabled)' != 'true' and Exists('$(OutputFileName)')">
    <ItemGroup>
      <Compile Include="$(OutputFileName)"/>
      <FileWrites Include="$(OutputFileName)"/>
    </ItemGroup>
  </Target>
</Project>